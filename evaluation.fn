to "clone" an object "foo" means to make a new object whose only
slot is a parent data slot referencing foo. any messages sent to the
clone will just get passed on to foo.

// inheriting

say we have an object Base that has a method "foo". foo calls "bar".

now say we have another object Derived that has Base as a parent. it
also has a method "bar". when we call "Derived foo" we're calling the
inherited "foo", but when we evaluate foo, it should find the derived
"bar". this means the evaluation context for a method isn't always
the object that the method is bound to.

// evaluating

name
- look up value in data slot of current object

number
- evaluates to value

message (unary, op, keyword)
- evaluate receiver expression to get object
- look up method on receiver
  (this means possibly walking up parents, etc.)
- call method, passing in args
  - clone method block
  - set data slots on clone for args
  - evaluate block with context self = receiver
  
sequence
- eval first
- evaluates to value of evaluating second