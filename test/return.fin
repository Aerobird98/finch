Test.suite("Return") is {
  Test.test("return exits enclosing method") is {
    var a = "0"
    var object = [
      foo {
        a = a + "1"
        {
          a = a + "2"
          return
          a = a + "3"
        }.call
        a = a + "4"
      }
    ]
    object.foo

    Test.that(a) equals("012")
  }

  Test.test("the method returns the value passed to return") is {
    var a = "before"
    var object = [
      foo {
        return "result"
        "bad"
      }
    ]

    Test.that(object.foo) equals("result")
  }

  Test.test("returns work even when passed to tail calls") is {
    var a = "before"
    var object = [
      foo {
        if (true) then { return "result" }
      }
    ]

    Test.that(object.foo) equals("result")
  }
}