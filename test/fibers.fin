Test suite: "Fibers" is: {
    Test test: "new: doesn't immediately start" is: {
        executed <- false
        fiber <- Fiber new: {
            executed <-- true
        }

        Test is-false: executed
        Test is-false: fiber running?
        Test is-false: fiber done?

        fiber run
        Test is-true: executed
        Test is-false: fiber running?
        Test is-true: fiber done?
    }

    Test test: "spawn: immediately starts" is: {
        executed <- false
        fiber <- Fiber spawn: {
            executed <-- true
        }

        Test is-true: executed
        Test is-false: fiber running?
        Test is-true: fiber done?
    }

    Test test: "yield: returns value" is: {
        fiber <- Fiber new: {
            Fiber yield: 123
        }

        result <- fiber run

        Test that: result equals: 123
        Test is-false: fiber running?
        Test is-false: fiber done?

        fiber run
        Test is-false: fiber running?
        Test is-true: fiber done?
    }

    Test test: "last run returns block value" is: {
        fiber <- Fiber new: {
            Fiber yield: 123
            345
        }

        result1 <- fiber run
        result2 <- fiber run

        Test that: result1 equals: 123
        Test that: result2 equals: 345
        Test is-false: fiber running?
    }

    Test test: "run returns nil after last yield" is: {
        fiber <- Fiber new: {
            Fiber yield: 123
        }

        result1 <- fiber run
        result2 <- fiber run

        Test that: result1 equals: 123
        Test that: result2 equals: nil
        Test is-false: fiber running?
    }

    Test test: "run: passes in value" is: {
        passed-in <- nil
        fiber <- Fiber new: {
            passed-in <-- Fiber yield
        }

        ' run to first yield
        fiber run

        ' pass value into yield and resume
        fiber run: 123

        Test that: passed-in equals: 123
    }
}