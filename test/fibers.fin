Test suite: "Fibers" is: {
    Test test: "new: doesn't immediately start" is: {
        executed <- False
        fiber <- Fiber new: {
            executed <-- True
        }
        
        Test isFalse: executed
        Test isFalse: fiber running?
        Test isFalse: fiber done?
        
        fiber run
        Test isTrue: executed
        Test isFalse: fiber running?
        Test isTrue: fiber done?
    }

    Test test: "spawn: immediately starts" is: {
        executed <- False
        fiber <- Fiber spawn: {
            executed <-- True
        }
        
        Test isTrue: executed
        Test isFalse: fiber running?
        Test isTrue: fiber done?
    }

    Test test: "yield: returns value" is: {
        fiber <- Fiber new: {
            Fiber yield: 123
        }
        
        result <- fiber run
        
        Test that: result equals: 123
        Test isFalse: fiber running?
        Test isFalse: fiber done?
        
        fiber run
        Test isFalse: fiber running?
        Test isTrue: fiber done?
    }

    Test test: "last run returns block value" is: {
        fiber <- Fiber new: {
            Fiber yield: 123
            345
        }
        
        result1 <- fiber run
        result2 <- fiber run
        
        Test that: result1 equals: 123
        Test that: result2 equals: 345
        Test isFalse: fiber running?
    }

    Test test: "run returns Nil after last yield" is: {
        fiber <- Fiber new: {
            Fiber yield: 123
        }
        
        result1 <- fiber run
        result2 <- fiber run
        
        Test that: result1 equals: 123
        Test that: result2 equals: Nil
        Test isFalse: fiber running?
    }

    Test test: "run: passes in value" is: {
        passedIn <- Nil
        fiber <- Fiber new: {
            passedIn <-- Fiber yield
        }
        
        ' run to first yield
        fiber run
        
        ' pass value into yield and resume
        fiber run: 123
        
        Test that: passedIn equals: 123
    }
}