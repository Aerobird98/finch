writeLine: "Running Finch test suite."

' define a Test object the tests can use
Test <- (||
    _suite      <- ""
    _test       <- ""
    _testShown  <- false
    _tests      <- 0
    _failed     <- 0

    _totalTests <- 0
    _totalFails <- 0

    suite: name is: body {
        _suite <- name
        body call
        _suite <- ""
    }

    test: name is: body {
        _test       <- name
        _tests      <- 0
        _failed     <- 0
        _testShown  <- false

        body call

        if: _failed > 0 then: {
            writeLine: "FAIL " + _suite + " / " + _test + " failed " + _failed +
                " / " + _tests + " tests"
        } else: {
            writeLine: "PASS " + _suite + " / " + _test + " failed " + _failed +
                " / " + _tests + " tests"
        }
        _test <- ""
    }

    showHeader {
        if: _testShown not then: {
            writeLine: _suite + " / " + _test
            _testShown <- true
        }
    }

    fail { self isTrue: false }
    pass { self isTrue: true }

    isTrue:  actual { self that: actual equals: true }
    isNil:   actual { self that: actual equals: nil }
    isFalse: actual { self that: actual equals: false }

    that: actual equals: expected {
        _tests <- _tests + 1
        _totalTests <- _totalTests + 1

        if: actual != expected then: {
            _failed <- _failed + 1
            _totalFails <- _totalFails + 1

            self showHeader
            writeLine: "  Test " + _tests toString + " failed. Expected " +
                expected + " but got " + actual + "."
        }
    }

    complete {
        writeLine: ""
        if: _totalFails = 0 then: {
            writeLine: "All " + _totalTests + " tests passed."
        } else: {
            writeLine: _totalFails toString + " out of " + _totalTests +
                " tests failed."
        }
        writeLine: ""
    }
)

' run the test scripts
'### bob: hack! path should be relative to this script's path!
load: "../../test/arithmetic.fin"
load: "../../test/arrays.fin"
load: "../../test/booleans.fin"
load: "../../test/cascade.fin"
load: "../../test/fibers.fin"
load: "../../test/literals.fin"
load: "../../test/messages.fin"
load: "../../test/objects.fin"
load: "../../test/return.fin"
load: "../../test/self.fin"
load: "../../test/strings.fin"
load: "../../test/switch.fin"
load: "../../test/tco.fin"
load: "../../test/variables.fin"

Test complete
