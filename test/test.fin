writeLine: "Running Finch test suite."

' define a Test object the tests can use
def Test <- Object copyWith:
{
    def _suite      <- ""
    def _test       <- ""
    def _testShown  <- False
    def _tests      <- 0
    def _failed     <- 0
    
    .addMethod: "suite:is:" body:
    {|name body|
        _suite <- name
        body call
        _suite <- ""
    }

    .addMethod: "test:is:" body:
    {|name body|
        _test       <- name
        _tests      <- 0
        _failed     <- 0
        _testShown  <- False

        body call

        def header <- "--- "
        if: _failed > 0 then: { header <- "XXX " }

        writeLine: header + _suite + " / " + _test + " " + (_tests - _failed) + " / " + _tests + " tests passed"

        _test <- ""
    }

    .addMethod: "showHeader" body:
    {
        if: _testShown not then:
        {
            writeLine: _suite + " / " + _test
            _testShown <- True
        }
    }

    .addMethod: "isTrue:" body:
    {|actual|
        _tests <- _tests + 1

        if: actual not then:
        {
            _failed <- _failed + 1
            .showHeader
            writeLine: "  Test " + _tests toString + " failed."
        }
    }

    .addMethod: "that:equals:" body:
    {|actual expected|
        .isTrue: actual = expected
    }
}

' run the test scripts
'### bob: hack! path should be relative to this script's path!
load: "../../test/arithmetic.fin"
load: "../../test/literals.fin"
load: "../../test/variables.fin"