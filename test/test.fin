write-line: "Running Finch test suite."

// define a Test object the tests can use
var Test = [
  _suite       = ""
  _test        = ""
  _test-shown? = false
  _tests       = 0
  _failed      = 0

  _total-tests = 0
  _total-fails = 0

  suite: name is: body {
    _suite = name
    body call
    _suite = ""
  }

  test: name is: body {
    _test        = name
    _tests       = 0
    _failed      = 0
    _test-shown? = false

    body call

    if: _failed > 0 then: {
      write-line: "FAIL " + _suite + " / " + _test + " passed " +
        (_tests - _failed) + " / " + _tests + " tests"
    } else: {
      write-line: "PASS " + _suite + " / " + _test + " passed " +
        (_tests - _failed) + " / " + _tests + " tests"
    }
    _test = ""
  }

  show-header {
    if: _test-shown? not then: {
      write-line: _suite + " / " + _test
      _test-shown? = true
    }
  }

  fail { self is-true: false }
  pass { self is-true: true }

  is-true:  actual { self that: actual equals: true }
  is-nil:   actual { self that: actual equals: nil }
  is-false: actual { self that: actual equals: false }

  that: actual equals: expected {
    _tests = _tests + 1
    _total-tests = _total-tests + 1

    if: actual != expected then: {
      _failed = _failed + 1
      _total-fails = _total-fails + 1

      self show-header
      write-line: "  Test " + _tests to-string + " failed. Expected " +
        expected + " but got " + actual + "."
    }
  }

  complete {
    write-line: ""
    if: _total-fails == 0 then: {
      write-line: "All " + _total-tests + " tests passed."
    } else: {
      write-line: _total-fails to-string + " out of " + _total-tests +
        " tests failed."
    }
    write-line: ""
  }

  to-string { "Test" }
]

// run the test scripts
//### bob: hack! path should be relative to this script's path!
load: "test/arithmetic.fin"
load: "test/arrays.fin"
load: "test/booleans.fin"
load: "test/cascade.fin"
load: "test/comments.fin"
// TODO(bob): Commenting out fibers because I think I'm going to change how they
// work.
//load: "../../test/fibers.fin"
load: "test/literals.fin"
load: "test/messages.fin"
load: "test/objects.fin"
load: "test/return.fin"
load: "test/self.fin"
load: "test/strings.fin"
load: "test/switch.fin"
// TODO(bob): TCO isn't working right now because of the register window stuff.
//load: "test/tco.fin"
load: "test/variables.fin"

Test complete
