// In order to make built-in binary operators extensible and symmetric, they
// should be based around double dispatch. In other words, instead of having:

Numbers :: + other { ...primitive addition... }

// we should do:

Numbers :: (
  + other { other add-number: self }
  add-number: other { primitive add... }
)

// This way, a user could come along and define their own type:

Vector <- (||
  new-x: x y: y { (|Vectors| _x <- x, _y <- y) }
)

Vectors <- (||
  + other { other add-vector: self }
  add-vector: vec { Vector new-x: vec x + self x y: vec y + self y }
)

Numbers :: (
  add-vector: vec { Vector new-x: vec x + self y: vec y + self }
)

// And with that they can support addition between vectors and numbers
// symmetrically:

1 + (Vector new-x: 2 y: 3) ' (3, 4)
(Vector new-x: 2 y: 3) + 1 ' (3, 4)
