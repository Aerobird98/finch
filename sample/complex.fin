' create the main factory object
Complex <- (|Object prototype|
    ' the prototypical complex number
    _prototype <- (|Object prototype|
        _real <- 0
        _imaginary <- 0

        ' accessors
        real { _real }
        imaginary { _imaginary }

        ' string conversion
        toString {
            _real toString + "+" + _imaginary + "i"
        }

        ' arithmetic
        + right {
            Complex new: _real + right real i: _imaginary + right imaginary
        }

        - right {
            Complex new: _real - right real i: _imaginary - right imaginary
        }

        * right {
            Complex new: (_real * right real) - (_imaginary * right imaginary) i:
                         (_imaginary * right real) + (_real * right imaginary)
        }

        magnitude {
            ((_real * _real) + (_imaginary * _imaginary)) sqrt
        }
    )

    ' accessor for the prototype
    prototype { _prototype }

    ' constructor
    new: real i: imaginary {
        (|_prototype|
            _real <- real
            _imaginary <- imaginary
        )
    }
)

' allow creating complex numbers from normal ones
Number prototype :: i { Complex new: 0 i: self }

' test it out a bit
a <- 4 i
b <- Complex new: 2 i: 3

writeLine: "a = " + a
writeLine: "b = " + b
writeLine: "|b| = " + b magnitude
writeLine: "a + b = " + (a + b)
writeLine: "a * b = " + (a * b)
