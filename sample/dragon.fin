// creates a singleton Dragon object. sending it the "turns:" message
// with a number of iterations causes it to write out the sequence
// of left and right turns required to draw a dragon curve with the
// given recursion depth.

obj Dragon {
  generate(depth) {
    write("dragon curve " + depth + " depth: ")
    self.iterate(depth, "R")
    write-line("") // end the line
  }

  // the inner recursive method
  iterate(depth, turn) {
    if (depth > 0) then {
      self.iterate(depth - 1, "R")
      write(turn)
      self.iterate(depth - 1, "L")
    }
  }
}

// test it
from (1) to (6) do { n -> Dragon.generate(n) }
