' create the main factory object
Complex <- (||
    ' the prototypical complex number
    _prototype <- (||
        _real <- 0
        _imaginary <- 0
        
        ' accessors
        real { _real }
        imaginary { _imaginary }
        
        ' string conversion
        toString { _real toString + "+" + _imaginary + "i" }
        
        ' arithmetic
        + right {
            Complex new: _real + right real i: _imaginary + right imaginary
        }

        - right {
            Complex new: _real - right real i: _imaginary - right imaginary
        }

        * right {
            Complex new: (_real * right real) - (_imaginary * right imaginary) i:
                         (_imaginary * right real) + (_real * right imaginary) 
        }
    )
    
    ' accessor for the prototype
    prototype { _prototype }
    
    ' constructor
    new: real i: imaginary {
        (|_prototype|
            _real <- real
            _imaginary <- imaginary
        )
    }
)

' allow create complex numbers from normal ones
Number addMethod: "i" body: {
    Complex new: 0 i: self
}